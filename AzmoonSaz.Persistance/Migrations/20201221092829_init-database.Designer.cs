// <auto-generated />
using System;
using AzmoonSaz.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AzmoonSaz.Persistance.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20201221092829_init-database")]
    partial class initdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.Classroom.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.Test.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Answers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CorrectAnswer")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.Test.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int?>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.User.UserInClassroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInClassrooms");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.Classroom.Classroom", b =>
                {
                    b.HasOne("AzmoonSaz.Domain.Entities.User.User", "Creator")
                        .WithMany("Classrooms")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.Test.Question", b =>
                {
                    b.HasOne("AzmoonSaz.Domain.Entities.Test.Test", "Test")
                        .WithMany("Questions")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Test");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.Test.Test", b =>
                {
                    b.HasOne("AzmoonSaz.Domain.Entities.Classroom.Classroom", "Classroom")
                        .WithMany("Tests")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.User.UserInClassroom", b =>
                {
                    b.HasOne("AzmoonSaz.Domain.Entities.Classroom.Classroom", "Classroom")
                        .WithMany("UserInClassrooms")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AzmoonSaz.Domain.Entities.User.User", "User")
                        .WithMany("UserInClassrooms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.Classroom.Classroom", b =>
                {
                    b.Navigation("Tests");

                    b.Navigation("UserInClassrooms");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.Test.Test", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("AzmoonSaz.Domain.Entities.User.User", b =>
                {
                    b.Navigation("Classrooms");

                    b.Navigation("UserInClassrooms");
                });
#pragma warning restore 612, 618
        }
    }
}
